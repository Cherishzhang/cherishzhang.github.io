<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sort on Learn and record</title>
    <link>http://cherishzhang.github.io/tags/sort/</link>
    <description>Recent content in Sort on Learn and record</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://cherishzhang.github.io/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>计算机基础知识 - 算法和数据结构</title>
      <link>http://cherishzhang.github.io/post/interviews/algorithm/</link>
      <pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://cherishzhang.github.io/post/interviews/algorithm/</guid>
      <description>

&lt;h2 id=&#34;排序算法:0410937a83f6b2d022d3a1c190b257c8&#34;&gt;排序算法&lt;/h2&gt;

&lt;p&gt;稳定排序:(N是数组长度，K是不同键值的数量)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;时间复杂度&lt;/th&gt;
&lt;th&gt;空间复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bubble&lt;/td&gt;
&lt;td&gt;\(O(N^2)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;比较相邻的两个元素，每次将当前排列中最大的元素冒泡到最后&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Cocktail&lt;/td&gt;
&lt;td&gt;\(O(N^2)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;双向的冒泡排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;insertion&lt;/td&gt;
&lt;td&gt;\(O(N^2)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;在一个有序数组中，插入一个给定的数到指定位置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;bucket&lt;/td&gt;
&lt;td&gt;\(O(N)\)&lt;/td&gt;
&lt;td&gt;需要\(O(K)\)的额外空间&lt;/td&gt;
&lt;td&gt;将数组分到有限数量的桶中，每个桶在分别排序，非比较排序，适合海量的均匀分布数据排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;merge&lt;/td&gt;
&lt;td&gt;\(O(NlogN)\)&lt;/td&gt;
&lt;td&gt;需要\(O(N)\)的额外空间&lt;/td&gt;
&lt;td&gt;将两个（或两个以上）有序表合并成一个新的有序表&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;binary tree&lt;/td&gt;
&lt;td&gt;期望时间\(O(NlogN)\)，最坏\(O(N^2)\)&lt;/td&gt;
&lt;td&gt;\(O(N)\)&lt;/td&gt;
&lt;td&gt;二叉搜索树,左子树的所有结点值小于根结点 ,右子树所有结点值大于根结点,左右子树分别为二叉搜索树&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;不稳定排序:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;时间复杂度&lt;/th&gt;
&lt;th&gt;空间复杂度&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;selection&lt;/td&gt;
&lt;td&gt;\(O(N^2)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;每次从待排序数据中选出最大/小的元素，放在序列的起始位置&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;shell&lt;/td&gt;
&lt;td&gt;\(O(NlogN)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;插入排序的一种，也称缩小增量排序&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;heapsort&lt;/td&gt;
&lt;td&gt;\(O(NlogN)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;利用堆积树，是选择排序的一种&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;quicksort&lt;/td&gt;
&lt;td&gt;期望时间\(O(NlogN)\)，最坏\(O(N^2)\)&lt;/td&gt;
&lt;td&gt;\(O(1)\)&lt;/td&gt;
&lt;td&gt;适合于大的，乱数列表;将数据分成两部分,一部分的所有数据比另一部所有数据都要小,递归排列,直到整组数据有序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;算法题:0410937a83f6b2d022d3a1c190b257c8&#34;&gt;算法题&lt;/h2&gt;

&lt;p&gt;1 大整数加、减、乘、除、求模运算实现
2 很多整数，找其中出现次数最多的那个数
3 单链表翻转（两个指针如何实现）、查找、删除、插入以及双向链表、有序链表合并
4 判断一个整数是否是2的整数次幂.(n&amp;amp;(n-1))
5 二分查找（注意边界条件）
6 常见排序算法的实现以及稳定性（快排跟归并考的很多）
7 字符串翻转（O(n)）、匹配（KMP算法）
8 最长递增子序列（nlogn的算法）
9 链表判断是否有环，环的入口，两个链表是否相交（快慢指针）。
10 指定一个数组，求2个数的和等于指定的和（某一个数），如果是3,4,5，n个等于个的和（某一个数）呢？（可以看作背包问题）
11 跳台阶问题&lt;/p&gt;

&lt;h2 id=&#34;参考链接:0410937a83f6b2d022d3a1c190b257c8&#34;&gt;参考链接&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://baike.baidu.com/link?url=2KJOOFEzbpB20KrSK4QVHs01QN7D9zVuf6Fesb4AZiTxGKwlS-vVZzADhIbOhzSNdxoqAREtyVE6FtZysGtJywCYThzSFn-Q3IAWCTLBtfDhyLiY4btPxS5AfjQcGbqR&#34;&gt;排序算法&lt;/a&gt;11&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>