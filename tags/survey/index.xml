<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Survey on Learn and record</title>
    <link>http://cheriszhang.github.io/tags/survey/</link>
    <description>Recent content in Survey on Learn and record</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://cheriszhang.github.io/tags/survey/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>[rec] 推荐系统总结</title>
      <link>http://cheriszhang.github.io/post/rec/recommender/</link>
      <pubDate>Thu, 08 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>http://cheriszhang.github.io/post/rec/recommender/</guid>
      <description>

&lt;p&gt;本文是对推荐系统相关知识的一个梳理和总结。主要是参考阿里的一篇技术分享ppt。&lt;/p&gt;

&lt;p&gt;推荐系统的核心问题是&lt;strong&gt;&lt;r&gt;如何评估一个用户(user)对一个物品(item)的评分(喜欢程度)&lt;/r&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&#34;场景和指标:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;场景和指标&lt;/h2&gt;

&lt;p&gt;推荐系统主要用来解决信息过量负载(&lt;r&gt;information overload&lt;/r&gt;)的问题，可以应用&lt;strong&gt;&lt;r&gt;多种场景&lt;/r&gt;&lt;/strong&gt;中。如:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;音乐，电影&lt;/p&gt;

&lt;p&gt;电子商务中商品推荐&lt;/p&gt;

&lt;p&gt;个性化阅读&lt;/p&gt;

&lt;p&gt;社交好友推荐、朋友圈推荐&lt;/p&gt;

&lt;p&gt;基于位置的服务推荐&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;r&gt;评价标准&lt;/r&gt;&lt;/strong&gt;：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;用户满意度(&lt;r&gt;user satisfaction&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;调研或用户反馈；点击率、转化率等&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;准确率(&lt;r&gt;Accuracy&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;precision/recall/F-score&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;覆盖率(&lt;r&gt;Coverage&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;长尾分布，尾部物品和用户&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;多样性(&lt;r&gt;Diversity&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;两两之间不相似&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;新颖性(&lt;r&gt;Novelty&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;没听过的物品&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;惊喜性(&lt;r&gt;Serendipity&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;？&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;用户信任度(&lt;r&gt;Trust&lt;/r&gt;)/可解释性(&lt;r&gt;explanation&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;推荐理由&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;鲁棒性/健壮性(&lt;r&gt;Robustness&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;哈利波特现象；抗攻击、反作弊&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;实时性(&lt;r&gt;Real-time/online&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;新加入的物品；新的用户行为(实时意图)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;商业目标(&lt;r&gt;business target&lt;/r&gt;)&lt;/td&gt;
&lt;td&gt;一个用户带来多少盈利&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;&lt;r&gt;影响推荐效果的因素&lt;/r&gt;&lt;/strong&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;用户交互界面(User Interface)（用户感知）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;数据（收集and处理）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;领域知识（产品定位）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;算法迭代&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;非个性化-推荐-热度排行-popularity:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;&lt;strong&gt;非个性化&lt;/strong&gt;推荐：热度排行(Popularity)&lt;/h2&gt;

&lt;p&gt;排行榜算法&lt;r&gt;主要分为&lt;/r&gt;：&lt;/p&gt;

&lt;p&gt;单一维度的投票；多个维度的综合打分；考虑时间因素(引入衰减权重，如半衰期、冷却定律)；考虑反馈信息(Reddit)；考虑置信度(威尔逊区间)；防止马太效应(MBA)。&lt;/p&gt;

&lt;p&gt;这个方法容易实现，可以解决&lt;r&gt;新用户的冷启动&lt;/r&gt;问题。但无法对用户做出个性化推荐。通常情况下，可以先对新用户做热度排行推荐，然后根据用户的互动历史，做个性化推荐。&lt;/p&gt;

&lt;h2 id=&#34;协同过滤-collaborative-filtering:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;&lt;strong&gt;协同过滤&lt;/strong&gt;(Collaborative Filtering)&lt;/h2&gt;

&lt;p&gt;它的来源很简单，即朋友之间会互相推荐自己喜爱的产品。基本组成元素有：&lt;r&gt;评分矩阵&lt;/r&gt;和&lt;r&gt;相似度度量&lt;/r&gt;。&lt;/p&gt;

&lt;p&gt;主要分为两大类：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Memory-based(neighborhood-based)方法：Item-based/User-based CF&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Model-based方法：频繁项挖掘/聚类/分类/回归/矩阵分解/RBM/图模型&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;h4 id=&#34;user-based:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;User-based&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;计算目标用户的(前k个)相似用户(相似度度量：Pearson,Jaccard,cosine)&lt;/p&gt;

&lt;p&gt;找出相似用户喜欢的物品，并预测目标用户对这些物品的评分(knn, regression)&lt;/p&gt;

&lt;p&gt;过滤掉目标用户已经消费过的物品&lt;/p&gt;

&lt;p&gt;将剩余物品按照预测评分排序，返回top-N物品&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;item-based:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;Item-based&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;计算item之间的两两相似性&lt;/p&gt;

&lt;p&gt;假设预测用户对item的评分，首先找出用户评分过的物品，根据它们与item的相似度预测用户的的评分&lt;/p&gt;

&lt;p&gt;选取用户评分最高的前N个商品进行推荐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;问题1&lt;/strong&gt;： 比较user-based和item-based？&lt;/p&gt;

&lt;p&gt;Item之间的相似性是静态稳定的；而user之间的相似性是动态复杂的。&lt;/br&gt;
user-based: 可以帮助用户&lt;r&gt;发现新商品&lt;/r&gt;，带来惊喜性。但需要复杂的在线计算，而且无法处理新用户问题。&lt;/br&gt;
item-based: &lt;r&gt;准确性&lt;/r&gt;好，便于离线计算；但推荐缺乏多样性。&lt;/br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;问题2&lt;/strong&gt;：协同过滤的优缺点？&lt;/p&gt;

&lt;p&gt;优点：模型通用性好，实现简单。&lt;/br&gt;
缺点：&lt;r&gt;冷启动&lt;/r&gt;问题，&lt;r&gt;数据稀疏性&lt;/r&gt;；假定“过去的行为决定现在”，没有考虑&lt;r&gt;具体情景&lt;/r&gt;的差异；&lt;r&gt;热门倾向性&lt;/r&gt;(Popularity Bias)，很难推荐出小众偏好。&lt;/p&gt;

&lt;h4 id=&#34;关联规则:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;关联规则&lt;/h4&gt;

&lt;p&gt;基于物品之间的&lt;r&gt;共现性&lt;/r&gt;挖掘频繁项，应用场景为：买了又买，看了又看。主要有A-priori和FP-growth两种算法。&lt;/p&gt;

&lt;p&gt;支持度：\(s(X,Y) = \frac{包含X,Y的记录数}{总记录数}\)&lt;/p&gt;

&lt;p&gt;置信度：\(c(X,Y) = \frac{包含X,Y的记录数}{包含X的记录数}\)&lt;/p&gt;

&lt;p&gt;关联规则实现简单，通用性较强，适合&lt;strong&gt;商品搭配场景&lt;/strong&gt;；
在相似商品上的推荐效果往往不如协同过滤好；
注意在&lt;strong&gt;变量间关联&lt;/strong&gt;的解释上，由于一些隐含因素的影响，可能得出完全相反的结论(&lt;r&gt;辛普森悖论&lt;/r&gt;)。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ps: 辛普森悖论，两组数据分别讨论时满足某种性质，一旦合并考虑，却可能导致相反的结论。&lt;r&gt;主要原因&lt;/r&gt;是数据的不同分组之间基数差异很大（通常一个组相对于其他组来说数量占绝对优势）。一个&lt;r&gt;结论&lt;/r&gt;：分析数据时合理地将数据分组很重要。&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&#34;聚类-clustering:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;聚类(Clustering)&lt;/h4&gt;

&lt;p&gt;可以对用户按爱好分群，商品按相似度聚类。常用的算法有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;k-means, 层次聚类&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Louvain, 基于密度的聚类方法&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;聚类可以一定程度上解决&lt;strong&gt;数据稀疏性问题&lt;/strong&gt;，但精准度往往不如协同过滤好。&lt;/p&gt;

&lt;h4 id=&#34;分类-回归:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;分类/回归&lt;/h4&gt;

&lt;p&gt;它的基本思想是把&lt;r&gt;评分预测&lt;/r&gt;看作一个多分类(回归)问题。常用的分类器有LR,Navie Bayes，把item的特征向量作为模型的输入。&lt;/p&gt;

&lt;p&gt;比较通用，可以和其他方法组合，提高预测的准确性；需要大量训练数据，防止过拟合现象。&lt;/p&gt;

&lt;h4 id=&#34;svd:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;SVD&lt;/h4&gt;

&lt;p&gt;它的原理是将(用户,物品)的评分矩阵R，分解成三个矩阵U,S,V。SVD本身要求矩阵必须是稠密矩阵，而评分矩阵非常稀疏；此外，SVD的计算复杂度很高。&lt;/p&gt;

&lt;p&gt;于是，就出现了关于SVD的一系列变形，如FunkSVD,BiasSVD,SVD++。具体可参见开源算法包&lt;r&gt;svdfeture&lt;/r&gt;。&lt;/p&gt;

&lt;h4 id=&#34;item的向量化:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;Item的向量化&lt;/h4&gt;

&lt;p&gt;向量化的目的是将Item进行知识、概念层次上的表达。常用方法有pLSA,LDA,&lt;a href=&#34;http://cherishzhang.github.io/post/word2vec/&#34;&gt;Word2Vec&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;向量化时大多基于行为数据，&lt;r&gt;行为少的item向量化效果不好&lt;/r&gt;。&lt;/p&gt;

&lt;h4 id=&#34;玻尔兹曼机:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;玻尔兹曼机&lt;/h4&gt;

&lt;p&gt;Boltzmann机：两层神经网络(无输出层)；对称、全连接；每个神经元有0/1(激活/未激活)两种状态，某个时刻的状态是随机的，由一定概率确定。&lt;/p&gt;

&lt;p&gt;受限Boltzmann机：受限，层内无连接。&lt;/p&gt;

&lt;p&gt;如何对(user,item)进行建模？一个用户一个RBM，共享隐层，权重W和偏置b。&lt;/p&gt;

&lt;h4 id=&#34;图模型:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;图模型&lt;/h4&gt;

&lt;p&gt;多用于社交网络中人与人的关系挖掘。方法有SimRank,SimRank++,Markov模型。&lt;/p&gt;

&lt;p&gt;借助图的结构的传导性，可以发现协同过滤发现不了的弱相似性，给推荐带来一定的惊喜性。但该模型仍面临数据稀疏性和冷启动问题。&lt;/p&gt;

&lt;h2 id=&#34;基于-内容-content-based:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;基于&lt;strong&gt;内容&lt;/strong&gt;(Content-based)&lt;/h2&gt;

&lt;p&gt;内容包括：&lt;r&gt;文本描述&lt;/r&gt;（通常用NLP技术挖掘关键词）、&lt;r&gt;Item属性&lt;/r&gt;(如电影的主题，职位的行业)、&lt;r&gt;Item特征&lt;/r&gt;(如语音信号表示、图像向量表示)&lt;/p&gt;

&lt;p&gt;基本组成：&lt;r&gt;item特征向量&lt;/r&gt;(如文本的TF-IDF向量)，&lt;r&gt;用户profile向量&lt;/r&gt;(根据用户偏好的items来提取)、&lt;r&gt;匹配分&lt;/r&gt;(cosine,分类/回归模型)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方面&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;优点&lt;/td&gt;
&lt;td&gt;能够推荐出用户独有的&lt;r&gt;小众偏好&lt;/r&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;可以一定程度解决&lt;r&gt;数据稀疏&lt;/r&gt;问题和&lt;r&gt;item冷启动&lt;/r&gt;问题&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;具有很好的&lt;r&gt;解释性&lt;/r&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;缺点&lt;/td&gt;
&lt;td&gt;如何提取出有意义的特征&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;很难将不同item的特征组合在一起(邻域思想)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;惊喜性&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;依赖用户profile的准确性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;混合-方法-hybrid-approaches:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;&lt;strong&gt;混合&lt;/strong&gt;方法(Hybrid Approaches)&lt;/h2&gt;

&lt;p&gt;通常比单个算法好，需要在不同算法之间、理论效果和实际可行性之间权衡。&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;weighted&lt;/td&gt;
&lt;td&gt;加权&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;switching&lt;/td&gt;
&lt;td&gt;切换，确定一个合理的跳进&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Mixed&lt;/td&gt;
&lt;td&gt;混合&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;feature combination&lt;/td&gt;
&lt;td&gt;特征组合，不同特征组合在一起&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;feature augmentation&lt;/td&gt;
&lt;td&gt;特征扩展，一个模型的输出作为另一个的特征&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;cascade&lt;/td&gt;
&lt;td&gt;级联，粗排 -&amp;gt; 精排&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;一些新进展:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;一些新进展&lt;/h2&gt;

&lt;h3 id=&#34;learning-to-rank:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;Learning to rank&lt;/h3&gt;

&lt;p&gt;将排序看做一个ML问题，评价准则为NDCG(normalized discounted cumulative gain)或MRR(mean reciprocal rank)。算法分为三类：Pointwise, Pairwise, Listwise。&lt;/p&gt;

&lt;h3 id=&#34;页面整体优化-page-optimization:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;页面整体优化(Page Optimization)&lt;/h3&gt;

&lt;p&gt;关于用户注意力建模的一篇文章Modeling User Attention and Interaction on the Web。&lt;/p&gt;

&lt;h3 id=&#34;情景推荐-context-aware:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;情景推荐(Context-aware)&lt;/h3&gt;

&lt;p&gt;针对不同推荐场景，情景也有所不同。看电影，是周末还是工作日？订餐，餐厅距离？网购，用户心情？母婴：孩子年龄？&lt;/p&gt;

&lt;p&gt;算法主要有&lt;r&gt;张量分解(Tensor Factorization)&lt;/r&gt;，&lt;r&gt;分解机(Factorization Machine)&lt;/r&gt;。其中后者的效果更好。&lt;/p&gt;

&lt;h3 id=&#34;深度学习:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;深度学习&lt;/h3&gt;

&lt;p&gt;主要用到的有卷积神经网络(CNN)和循环神经网络(RNN)。&lt;/p&gt;

&lt;h2 id=&#34;参考链接:0ddb80b7e0dcbf864c099ae18a623ad9&#34;&gt;参考链接&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzIzOTU0NTQ0MA==&amp;amp;mid=2247483811&amp;amp;idx=1&amp;amp;sn=fc3ee4ddfc4a8d6014a4cd90cdb5983c&#34;&gt;常用推荐算法&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzA5NzkxMzg1Nw==&amp;amp;mid=2653160714&amp;amp;idx=1&amp;amp;sn=7e53c70b3567f2277206dd5ba5347591&#34;&gt;百分点亿级个性化推荐系统的发展历程和实践架构&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>